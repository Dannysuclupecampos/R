facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(.5))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")+
theme_classic()
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "fill")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(.5))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")+
theme_lucid()
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "fill")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(.5))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")+
theme_transparent()
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "fill")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(.5))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")+
theme_radar()
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "fill")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(.5))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")+
theme_pubclean()
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "fill")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(.5))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "fill")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(.9))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "dodge")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(.9))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "dodge")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(.1))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "dodge")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(5))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "dodge")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(20))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "fill")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(20))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "fill")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(.5))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "fill")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(.5))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")+
theme_modern()
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "fill")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(.5))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")+
theme_modern()+
theme(axis.text.x = element_text(angle = 45L))
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "fill")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(.5))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")+
theme_modern()+
theme(axis.text.x = element_text(angle = 20L))
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "fill")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(.5))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")+
theme_modern()+
theme(axis.text.x = element_text(angle = 15L))
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "fill")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(.5))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")+
theme_classic()
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "fill")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(.5))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")+
theme_classic2()
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "fill")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(.5))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")+
theme_minimal()
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "fill")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(.5))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")+
theme_modern(axis.text.angle = 45)
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "fill")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(.8))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")+
theme_modern(axis.text.angle = 45)
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "fill")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(2))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")+
theme_modern(axis.text.angle = 45)
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "fill")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(.8))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")+
theme_modern(axis.text.angle = 45)
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "fill")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "count", position = position_fill(.8))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")+
theme_modern(axis.text.angle = 45)
ggplot(d) +
aes(x = proc_cat, fill = resultado_si_no) +
geom_bar(position = "fill")+
facet_wrap(~sexo_0_1)+
geom_text(stat = "prop", position = position_fill(.8))+
labs(x = "Procedencia", y = "Frecuencia %", fill = "Resultado")+
theme_modern(axis.text.angle = 45)
library(dplyr)
library(multcompView)
library(readxl)
Libro1 <- read_excel("Articulos/mermelada_stevia/Libro1.xlsx")
View(Libro1)
View(Libro1)
str(Libro1)
anova <- aov(Libro1)
anova <- aov(Libro1$`Rendimiento calorico (kcal)`~Libro1$Tratamientos)
summary(anova)
View(anova)
anova <- aov(Libro1$`Rendimiento calorico (kcal)`~Libro1$Tratamientos, data = Libro1)
summary(anova)
a <- as.data.frame.list(anova)
a <- as.data.frame.list(anova$model)
a
View(a)
a <- as.data.frame.list(anova$rank)
a
a <- as.data.frame.list(anova$coefficients)
a
View(a)
a <- as.data.frame.list(anova$fitted.values)
a
View(a)
anova <- aov(Libro1$`Rendimiento calorico (kcal)`~Libro1$Tratamientos, data = Libro1)
summary(anova)
View(a)
attach(Libro1)
anova <- aov(`Rendimiento calorico (kcal)`~Tratamientos)
summary(anova)
library(compareGroups)
library(compareGroups)
detach("package:compareGroups", unload = TRUE)
library(compareGroups)
detach("package:compareGroups", unload = TRUE)
install.packages("textshaping")
install.packages("textshaping")
library(compareGroups)
install.packages(c("textshaping", "systemfonts", "gdtools", "compareGroups"))
library(compareGroups)
install.packages("ragg", dependencies = TRUE)
library(ragg)
library(compareGroups)
install.packages("ragg")
install.packages("compareGroups")
library(compareGroups)
remove.packages("compareGroups")
install.packages("compareGroups")
install.packages("C:/Users/user/Downloads/compareGroups_4.5.1.tar.gz", repos = NULL, type = "source")
library(compareGroups)
library(compareGroups)
install.packages("C:/Users/user/Downloads/compareGroups_4.0.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/user/Downloads/compareGroups_4.2.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/user/Downloads/compareGroups_3.3.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/user/Downloads/compareGroups_4.9.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/user/Downloads/compareGroups_4.5.1.tar.gz", repos = NULL, type = "source")
# Cargar librerías
library(dplyr)
library(corrplot)
library(psych)
# Ejemplo de datos (500 urocultivos, resistencia binaria: 1=R, 0=S/I)
set.seed(123)
data <- data.frame(
Ampicilina = sample(c(1, 0), 500, replace = TRUE, prob = c(0.6, 0.4)),
Ceftriaxona = sample(c(1, 0), 500, replace = TRUE, prob = c(0.16, 0.84)),
Ciprofloxacina = sample(c(1, 0), 500, replace = TRUE, prob = c(0.4, 0.6)),
Levofloxacina = sample(c(1, 0), 500, replace = TRUE, prob = c(0.36, 0.64)),
Trimetoprim = sample(c(1, 0), 500, replace = TRUE, prob = c(0.5, 0.5)),
Gentamicina = sample(c(1, 0), 500, replace = TRUE, prob = c(0.2, 0.8))
)
View(data)
# Calcular matriz de correlación (coeficiente phi)
cor_matrix <- phi(data)  # Función del paquete psych para datos binarios
# Calcular matriz de correlación (coeficiente phi)
cor_matrix <- phi(data)  # Función del paquete psych para datos binarios
library(psych)
library(corrplot)
# Calcular matriz de correlación (coeficiente phi)
cor_matrix <- phi(data)  # Función del paquete psych para datos binarios
# Calcular matriz de correlación (coeficiente phi)
cor_matrix <- phi(data)  # Función del paquete psych para datos binarios
cor_matrix <- tetrachoric(data)
View(cor_matrix)
# Crear mapa de calor
corrplot(cor_matrix, method = "color", type = "upper",
tl.col = "black", tl.srt = 45,
addCoef.col = "black", # Añadir valores de phi
col = colorRampPalette(c("blue", "white", "red"))(100),
title = "Mapa de calor de correlaciones entre resistencias",
mar = c(0, 0, 2, 0))
# Ejemplo de datos (500 urocultivos, resistencia binaria: 1=R, 0=S/I)
set.seed(123)
data <- data.frame(
Ampicilina = sample(c(1, 0), 500, replace = TRUE, prob = c(0.6, 0.4)),
Ceftriaxona = sample(c(1, 0), 500, replace = TRUE, prob = c(0.16, 0.84)),
Ciprofloxacina = sample(c(1, 0), 500, replace = TRUE, prob = c(0.4, 0.6)),
Levofloxacina = sample(c(1, 0), 500, replace = TRUE, prob = c(0.36, 0.64)),
Trimetoprim = sample(c(1, 0), 500, replace = TRUE, prob = c(0.5, 0.5)),
Gentamicina = sample(c(1, 0), 500, replace = TRUE, prob = c(0.2, 0.8))
)
# Calcular matriz de correlaciones (phi / tetrachoric para binarios)
cor_matrix <- tetrachoric(data)$rho
# Crear mapa de calor
corrplot(cor_matrix, method = "color", type = "upper",
tl.col = "black", tl.srt = 45,
addCoef.col = "black", # Añadir valores en el gráfico
col = colorRampPalette(c("blue", "white", "red"))(100),
title = "Mapa de calor de correlaciones entre resistencias",
mar = c(0, 0, 2, 0))
View(cor_matrix)
# Crear mapa de calor
corrplot(cor_matrix, method = "color", type = "upper",
tl.col = "black", tl.srt = 45,
addCoef.col = "black", # Añadir valores en el gráfico
col = colorRampPalette(c("blue", "white", "red"))(100),
mar = c(0, 0, 2, 0))
View(cor_matrix)
setwd("C:/Users/user/Documents/Articulos/coresistencia")
library(readxl)
base <- read_excel("Libro1.xlsx")
View(base)
library(dplyr)
summary(base)
# > setwd("C:/Users/user/Documents/Articulos/coresistencia")
# > library(readxl)
# > base <- read_excel("Libro1.xlsx")
# > View(base)
names(base)
summary(base$sexo)
unique(base$sexo)
base$sexo <- ifelse(base$sexo == "0", "F",
ifelse(base$sexo == "1", "M", NA))
unique(base$sexo)
View(base)
summary(base$sexo)
# > setwd("C:/Users/user/Documents/Articulos/coresistencia")
# > library(readxl)
# > base <- read_excel("Libro1.xlsx")
# > View(base)
names(base)
base$sexo <- ifelse(base$sexo == "0", "F",
ifelse(base$sexo == "1", "M", NA))
unique(base$sexo)
unique(base$sexo)
base$sexo <- ifelse(base$sexo == "0", "F",
ifelse(base$sexo == "1", "M", NA))
unique(base$sexo)
# > setwd("C:/Users/user/Documents/Articulos/coresistencia")
# > library(readxl)
# > base <- read_excel("Libro1.xlsx")
# > View(base)
names(base)
summary(base$sexo)
base <- read_excel("Libro1.xlsx")
View(base)
summary(base$sexo)
unique(base$sexo)
base <- base %>%
mutate(sexo = ifelse(sexo == "0", "F",
ifelse(sexo == "1", "M", NA))) %>%
filter(!is.na(sexo))
unique(base$sexo)
#sexo
summary(base$sexo)
unique(base$sexo)
View(base)
names(base)
#edad
summary(base$edad)
unique(base$edad)
View(base)
base$edad <- as.numeric(base$edad)
#edad
summary(base$edad)
unique(base$edad)
# leucocitos
summary(base$leucocitos)
unique(base$leucocitos)
base$leucocitos <- recode(base$leucocitos,
"0" = "0-5",
"1" = "5-10",
"2" = "10-20",
"3" = "20-30",
"4" = "30-40",
"5" = "40-50",
"6" = "50-99",
"7" = "80-100"
)
unique(base$leucocitos)
# leucocitos
summary(base$leucocitos)
names(base)
# hematies
summary(base$hematies)
unique(base$hematies)
base$hematies <- recode(base$hematies,
"0" = "0-5",
"1" = "5-10",
"2" = "10-20",
"3" = "20-30",
"4" = "30-40",
"5" = "40-50",
"6" = "50-99"
)
View(base)
summary(base$c_epi)
unique(base$c_epi)
base$c_epi <- recode(base$c_epi,
"0" = "0-5",
"1" = "5-10",
"2" = "10-20",
"3" = "20-30")
unique(base$c_epi)
summary(base$c_epi)
# bacterias
summary(base$bacterias)
unique(base$bacterias)
base$bacterias <- recode(base$bacterias,
"0" = "escasas",
"1" = "moderadas",
"2" = "regular",
"3" = "abundantes")
unique(base$bacterias)
#piocitos
unique(base$piocitos)
base$piocitos <- recode(base$piocitos,
"0" = "no",
"1" = "si")
#piocitos
unique(base$piocitos)
#piocitos
unique(base$piocitos)
# eliminando en NA
base <- base[!is.na(base$piocitos), ]
#piocitos
unique(base$piocitos)
# bacterias
summary(base$bacterias)
unique(base$bacterias)
names(base)
# filamento_mucoide
unique(base$filamento_mucoide)
# aislamiento
unique(base$aislamiento)
base <- base %>%
filter(!aislamiento %in% c(0,5,6)) %>%
mutate(aislamiento = case_when(
aislamiento == 1 ~ "eco",
aislamiento == 4 ~ "proteus"
))
# aislamiento
unique(base$aislamiento)
# filamento_mucoide
unique(base$filamento_mucoide)
#piocitos
unique(base$piocitos)
# aislamiento
unique(base$aislamiento)
# recuento_ufc_ml
unique(base$recuento_ufc_ml)
base <- base %>%
filter(recuento_ufc_ml != "0") %>%
mutate(recuento_ufc_ml = case_when(
recuento_ufc_ml == "1" ~ "<10^4",
recuento_ufc_ml == "2" ~ "10^4-10^5",
recuento_ufc_ml == "3" ~ ">10^5"
))
# recuento_ufc_ml
unique(base$recuento_ufc_ml)
names(base)
# fenotipo
unique(base$fenotipo)
base <- base %>%
mutate(fenotipo = case_when(
fenotipo == "1" ~ "blee+",
fenotipo == "0" ~ "blee-"
))
# fenotipo
unique(base$fenotipo)
View(base)
# amc
unique(base$amc)
# nitritos
unique(base$nitritos)
base <- base %>%
mutate(nitritos = case_when(
nitritos == "1" ~ "positivo",
nitritos == "0" ~ "negativo"
))
# nitritos
unique(base$nitritos)
View(base)
# esterasa
unique(base$esterasa)
base <- base %>%
mutate(esterasa = case_when(
esterasa == 1 ~ "1+",
esterasa == 0 ~ "negativo"
))
# esterasa
unique(base$esterasa)
# cetonas
unique(base$cetonas)
# sangre
unique(base$sangre)
base <- base %>%
mutate(sangre = case_when(
sangre == "0" ~ "negativo",
sangre == "1" ~ "1+",
sangre == "2" ~ "2+",
sangre == "3" ~ "3+"
))
# sangre
unique(base$sangre)
# glucosa
unique(base$glucosa)
base <- base %>%
mutate(glucosa = case_when(
glucosa == "0" ~ "negativo",
glucosa == "1" ~ "50",
glucosa == "2" ~ "150"
))
# glucosa
unique(base$glucosa)
# proteinas
unique(base$proteinas)
base <- base %>%
mutate(proteinas = case_when(
proteinas == "0" ~ "negativo",
proteinas == "2" ~ "100",
proteinas == "3" ~ "500"
))
# proteinas
unique(base$proteinas)
library(writexl)
# Guardar en Excel
write_xlsx(base, "mi_base.xlsx")
